name: "CodeQL"

on:
  push:
    paths-ignore: 
      - "README.md"
      - "LICENSE"
      - ".gitignore"
      - ".github/workflows/ccpp.yml"
  pull_request:
    branches: [ master ]
    paths-ignore: 
      - "README.md"
      - "LICENSE"
      - ".gitignore"
      - ".github/workflows/ccpp.yml"

env:
  BUILD_TYPE: Release

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp', 'javascript' ]
        options: [ 'openssl', 'boost', 'all', 'none' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    # Install boost if the language is 'cpp' and the options are 'boost' or 'all'
    - name: Install boost
      if: matrix.language == 'cpp' && (matrix.options == 'boost' || matrix.options == 'all')
      run: sudo apt-get install libboost-all-dev -y

    # Set enable/disable tls support
    - name: enable/disable ssl support
      run: |
        if [ "${{matrix.options}}" = 'all' ] || [ "${{matrix.options}}" = 'openssl' ]; then
          echo "::set-output name=value::FALSE"
        else
          echo "::set-output name=value::TRUE"
        fi
      id: ssl_support
      if: matrix.language == 'cpp'
      shell: bash

    # Build C++
    # This will install boost und build using cmake
    - name: Build c++
      if: matrix.language == 'cpp'
      run: |
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DNO_SSL=${{steps.ssl_support.outputs.value}} . -B build
        cmake --build build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
