name: Create Release

on:
  push:
    tags: 
      - '*'

jobs:
  build-ubuntu-release:
    needs: [build-windows-release, build-macos-release]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: create include
      run: mkdir include
    - name: install boost
      run: sudo apt-get install libboost1.65-all-dev -y
    - name: cmake
      run: cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_HTTPS=TRUE -DENABLE_WEBSOCKET=TRUE -DBUILDDLL=TRUE .
    - name: build
      run: cmake --build . 
    - name: zip files
      uses: papeloto/action-zip@v1
      with:
        files: src/libCppJsLib.so src/CppJsLib.hpp
        dest: rel.zip
    
    # Compile jni lib and jar
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.3'
    - name: Create javadoc
      working-directory: CppJsLibJava/src
      run: |
        rm Main.java
        find -name "*.java" > sources.txt
        mkdir javadoc
        javadoc -html5 -private -d javadoc @sources.txt
    - name: Zip javadoc
      uses: papeloto/action-zip@v1
      with:
        files: CppJsLibJava/src/javadoc
        dest: javadoc.zip
    - name: Build jar
      working-directory: CppJsLibJava/src
      run: |
        javac @sources.txt
        jar cvf CppJsLibJava.jar com/markusjx/cppjslib/*.class com/markusjx/cppjslib/nt/*.class com/markusjx/cppjslib/interfaces/*.class com/markusjx/cppjslib/functional/*.class com/markusjx/cppjslib/util/*.class
    - name: Run cmake for jni
      run: cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_HTTPS=TRUE -DENABLE_WEBSOCKET=TRUE -DBUILDDLL=TRUE -DBUILD_JNI_DLL=TRUE .
    - name: Build jni dll
      run: cmake --build .
    - name: zip files
      uses: papeloto/action-zip@v1
      with:
        files: src/libCppJsLib.so CppJsLibJava/src/CppJsLibJava.jar
        dest: linux-java-amd64.zip
    
    # Create Release and upload files
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          Automated release
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: ./rel.zip
        asset_name: linux-amd64.zip
        asset_content_type: application/zip
    - name: Upload Release Asset
      id: upload-release-asset-java
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: ./linux-java-amd64.zip
        asset_name: linux-java-amd64.zip
        asset_content_type: application/zip
    - name: Upload Javadoc
      id: upload-javadoc
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: ./javadoc.zip
        asset_name: javadoc.zip
        asset_content_type: application/zip
    # Download windows artifacts
    - name: Download artifact win
      uses: actions/download-artifact@v1.0.0
      with:
        name: win-release
    - name: Download artifact win-jni
      uses: actions/download-artifact@v1.0.0
      with:
        name: win-java-release
    - name: zip files
      uses: papeloto/action-zip@v1
      with:
        files: win-java-release/CppJsLib.dll CppJsLibJava/src/CppJsLibJava.jar
        dest: win-java-amd64.zip
      
    # Upload windows artifacts
    - name: Upload Release Asset
      id: upload-release-asset-win
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: ./win-release/win-amd64.zip
        asset_name: win-amd64.zip
        asset_content_type: application/zip
    - name: Upload Release Asset
      id: upload-release-asset-win-java
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: ./win-java-amd64.zip
        asset_name: win-java-amd64.zip
        asset_content_type: application/zip
    # Download macos artifacts
    - name: Download artifact macos
      uses: actions/download-artifact@v1.0.0
      with:
        name: macos-release
    # Upload macos artifacts
    - name: Upload Release Asset
      id: upload-release-asset-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: ./macos-release/macos-amd64.zip
        asset_name: macos-amd64.zip
        asset_content_type: application/zip

  build-windows-release:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
      - name: create include folder
        run: mkdir include
      - name: create lib folder
        run: mkdir lib
      - name: download openssl
        shell: powershell
        run: wget https://www.npcglib.org/~stathis/downloads/openssl-1.1.0f-vs2017.7z -OutFile openssl.7z
      - name: unzip openssl
        run: 7z x openssl.7z -r -y
      - name: copy openssl headers
        run: cp -r openssl-1.1.0f-vs2017/include64/openssl include
        shell: cmd
      - name: copy openssl libs
        run: cp -r openssl-1.1.0f-vs2017/lib64/. lib
        shell: cmd
      - name: Install Boost
        run: choco install -y boost-msvc-14.1
      - name: run cmake
        run: cmake -DENABLE_HTTPS=TRUE -DENABLE_WEBSOCKET=TRUE -DBUILDDLL=TRUE .
        env:
          BOOST_ROOT: C:/local/boost_1_67_0
      - name: build
        run: cmake --build . --config Release
      - name: zip files
        uses: papeloto/action-zip@v1
        with:
          files: src/Release/CppJsLib.dll src/Release/CppJsLib.lib src/CppJsLib.hpp
          dest: win-amd64.zip
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: win-release
          path: win-amd64.zip
      # Compile jni dll and jar
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11.0.3'
      - name: Run cmake for jni
        run: cmake -DENABLE_HTTPS=TRUE -DENABLE_WEBSOCKET=TRUE -DBUILDDLL=TRUE -DBUILD_JNI_DLL=TRUE .
      - name: Build jni dll
        run: cmake --build . --config Release
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: win-java-release
          path: src/Release/CppJsLib.dll
      
  build-macos-release:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - name: create include
      run: mkdir include
    - name: install boost
      run: brew install boost@1.60
    - name: cmake
      run: cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_WEBSOCKET=TRUE -DBUILDDLL=TRUE -DBOOST_ROOT="/usr/local/opt/boost@1.60" .
    - name: build
      run: cmake --build .
    - name: zip files
      uses: papeloto/action-zip@v1
      with:
        files: src/libCppJsLib.dylib src/CppJsLib.hpp
        dest: macos-amd64.zip
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: macos-release
        path: macos-amd64.zip

