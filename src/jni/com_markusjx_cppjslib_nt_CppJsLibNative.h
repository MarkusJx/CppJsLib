/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_markusjx_cppjslib_nt_CppJsLibNative */

#ifndef _Included_com_markusjx_cppjslib_nt_CppJsLibNative
#define _Included_com_markusjx_cppjslib_nt_CppJsLibNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    initWebGUI
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_initWebGUI__Ljava_lang_String_2
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    initWebGUI
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_initWebGUI__Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2I
  (JNIEnv *, jclass, jstring, jstring, jstring, jint);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    running
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_running
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    stopped
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_stopped
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    checkPorts
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_checkPorts__IZ
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    checkPorts
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_checkPorts__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    setLogger
 * Signature: (ILcom/markusjx/cppjslib/interfaces/LoggingFunction;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_setLogger__ILcom_markusjx_cppjslib_interfaces_LoggingFunction_2
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    setError
 * Signature: (ILcom/markusjx/cppjslib/interfaces/LoggingFunction;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_setError__ILcom_markusjx_cppjslib_interfaces_LoggingFunction_2
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    setLogger
 * Signature: (Lcom/markusjx/cppjslib/interfaces/LoggingFunction;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_setLogger__Lcom_markusjx_cppjslib_interfaces_LoggingFunction_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    setError
 * Signature: (Lcom/markusjx/cppjslib/interfaces/LoggingFunction;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_setError__Lcom_markusjx_cppjslib_interfaces_LoggingFunction_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    setWebSocketOpenHandler
 * Signature: (ILcom/markusjx/cppjslib/interfaces/Handler;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_setWebSocketOpenHandler
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    setWebSocketCloseHandler
 * Signature: (ILcom/markusjx/cppjslib/interfaces/Handler;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_setWebSocketCloseHandler
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    start
 * Signature: (IIILjava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_start
  (JNIEnv *, jclass, jint, jint, jint, jstring, jboolean);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    startNoWeb
 * Signature: (IIZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_startNoWeb
  (JNIEnv *, jclass, jint, jint, jboolean);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    setMountPoint
 * Signature: (ILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_setMountPoint
  (JNIEnv *, jclass, jint, jstring, jstring);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    removeMountPoint
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_removeMountPoint
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    stop
 * Signature: (IZI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_stop
  (JNIEnv *, jclass, jint, jboolean, jint);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    exposeFunction
 * Signature: (ILcom/markusjx/cppjslib/interfaces/CExposedFunc;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_exposeFunction
  (JNIEnv *, jclass, jint, jobject, jstring, jstring, jobjectArray);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    exposeVoidFunction
 * Signature: (ILcom/markusjx/cppjslib/interfaces/CExposedVoidFunc;Ljava/lang/String;[Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_exposeVoidFunction
  (JNIEnv *, jclass, jint, jobject, jstring, jobjectArray);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    importFunction
 * Signature: (ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_importFunction
  (JNIEnv *, jclass, jint, jstring, jstring, jobjectArray, jint);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    callJSFunction
 * Signature: (II[Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_callJSFunction
  (JNIEnv *, jclass, jint, jint, jobjectArray);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    callVoidJsFunction
 * Signature: (II[Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_callVoidJsFunction
  (JNIEnv *, jclass, jint, jint, jobjectArray);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    stringArrayToJSON
 * Signature: ([Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_stringArrayToJSON
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    createStringArrayFromJSON
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_createStringArrayFromJSON
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    deleteWebGUI
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_deleteWebGUI
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    hasWebsocketSupport
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_hasWebsocketSupport
  (JNIEnv *, jclass);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    hasHttpsSupport
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_hasHttpsSupport
  (JNIEnv *, jclass);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    ok
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_ok
  (JNIEnv *, jclass);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    getLastError
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_getLastError
  (JNIEnv *, jclass);

/*
 * Class:     com_markusjx_cppjslib_nt_CppJsLibNative
 * Method:    resetLastError
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_markusjx_cppjslib_nt_CppJsLibNative_resetLastError
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
